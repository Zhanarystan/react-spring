[{"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\index.js":"1","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\App.js":"2","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\service\\service.js":"3","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\navBar\\index.js":"4","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\navBar\\navBar.js":"5","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\addForm\\index.js":"6","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\addForm\\addForm.js":"7","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardList\\index.js":"8","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardList\\cardList.js":"9","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardDetails\\index.js":"10","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardDetails\\cardDetails.js":"11","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\search\\index.js":"12","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\search\\search.js":"13","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\homePage\\index.js":"14","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\homePage\\homePage.js":"15","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\FontAwesomeIcons\\index.js":"16","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\register\\index.js":"17","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\register\\register.js":"18","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\footer\\index.js":"19","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\footer\\footer.js":"20","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\login\\index.js":"21","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\login\\login.js":"22","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userContext.js":"23","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userProfile\\index.js":"24","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userProfile\\userProfile.js":"25"},{"size":459,"mtime":1614147706029,"results":"26","hashOfConfig":"27"},{"size":3236,"mtime":1615948884298,"results":"28","hashOfConfig":"27"},{"size":4128,"mtime":1615927919182,"results":"29","hashOfConfig":"27"},{"size":54,"mtime":1613705315296,"results":"30","hashOfConfig":"27"},{"size":2396,"mtime":1615927531904,"results":"31","hashOfConfig":"27"},{"size":57,"mtime":1613706138787,"results":"32","hashOfConfig":"27"},{"size":1241,"mtime":1615927561487,"results":"33","hashOfConfig":"27"},{"size":60,"mtime":1613711233781,"results":"34","hashOfConfig":"27"},{"size":2358,"mtime":1615927169947,"results":"35","hashOfConfig":"27"},{"size":69,"mtime":1613834703316,"results":"36","hashOfConfig":"27"},{"size":5280,"mtime":1615927536284,"results":"37","hashOfConfig":"27"},{"size":55,"mtime":1614582938596,"results":"38","hashOfConfig":"27"},{"size":421,"mtime":1614589146698,"results":"39","hashOfConfig":"27"},{"size":61,"mtime":1615802192567,"results":"40","hashOfConfig":"27"},{"size":2572,"mtime":1615884434602,"results":"41","hashOfConfig":"27"},{"size":625,"mtime":1615917437074,"results":"42","hashOfConfig":"27"},{"size":60,"mtime":1615802477600,"results":"43","hashOfConfig":"27"},{"size":4488,"mtime":1615927370918,"results":"44","hashOfConfig":"27"},{"size":54,"mtime":1615815577124,"results":"45","hashOfConfig":"27"},{"size":1326,"mtime":1615881764401,"results":"46","hashOfConfig":"27"},{"size":51,"mtime":1615884166237,"results":"47","hashOfConfig":"27"},{"size":2660,"mtime":1615909979883,"results":"48","hashOfConfig":"27"},{"size":103,"mtime":1615887612156,"results":"49","hashOfConfig":"27"},{"size":70,"mtime":1615917521082,"results":"50","hashOfConfig":"27"},{"size":5362,"mtime":1615949256413,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"47uze9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\index.js",[],["111","112"],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\App.js",["113","114","115","116","117","118","119","120","121"],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\service\\service.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\navBar\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\navBar\\navBar.js",["122","123","124","125","126","127","128"],"import React, {Component,  useState, useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport './navBar.css';\r\nimport UserContext from './../userContext';\r\nimport {useHistory, Redirect} from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return(\r\n        <UserContext.Consumer>\r\n            {\r\n                (value) => {\r\n                    return <Nav currentUser={value} \r\n                    removeCookieJWT = {props.removeCookieJWT} \r\n                    setCurrentUser={props.setCurrentUser}/>\r\n                }\r\n            }\r\n        </UserContext.Consumer>\r\n    )\r\n}\r\n\r\nconst Nav = ({currentUser, removeCookieJWT, setCurrentUser}) => {\r\n    \r\n\r\n    const Online = () => {\r\n        let history = useHistory();\r\n        return(\r\n            <>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/allcards\">All Cards</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/profile\">{currentUser.email}</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\" onClick={() => {\r\n                                            removeCookieJWT(['jwt']);\r\n                                            setCurrentUser({id:null, email:null, fullName:null, roles:null});\r\n                                            history.push(\"/\");\r\n                                            }}>Logout</Link>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const Offline = () => {\r\n        return(\r\n            <>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/registration\">Register</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <nav class=\"navbar navbar-light\">\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand mb-0 h1\"><Link to=\"/\">Task Manager</Link></span>\r\n                <ul class=\"nav justify-content-end\">\r\n                {currentUser.email!==null?<Online/>:<Offline/>}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\addForm\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\addForm\\addForm.js",["129"],"import React, {useState} from 'react';\r\nimport './addForm.css';\r\nimport CardService from './../../service/service';\r\n\r\nconst AddForm = (props) => {\r\n\r\n    \r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n  \r\n    const addCard = (e) => {\r\n        e.preventDefault();\r\n        if(text!==\"\"){\r\n            const data = {name: text};\r\n            props.service.addData(data,\"addcard\")\r\n                .then(data => {\r\n                    props.addNew(data);\r\n                })\r\n            setText(\"\");\r\n        }\r\n        else{\r\n            alert(\"You didn't enter any text\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"card add-card\">\r\n            <div className=\"card-body\">\r\n                <form onSubmit={addCard}>\r\n                    <input type=\"text\" className=\"create-card-input\" placeholder=\"Create new card\" \r\n                    onChange={(e) => setText(e.target.value)}\r\n                    value = {text}\r\n                    />\r\n                    <hr/>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"create-button\">ADD NEW +</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardList\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardList\\cardList.js",["130","131","132","133"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport './cardList.css';\r\nimport CardService from './../../service/service';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardList = (props) => {\r\n    \r\n    const [cards, setCards] = useState([]);\r\n\r\n    console.log(props.keyword)\r\n    \r\n\r\n    let change = props.deletedCardId, \r\n        change1 = props.newCard,\r\n        change2 = props.keyword;\r\n    let searchResultsFor = null;\r\n\r\n    useEffect(() => {\r\n        let k = props.keyword;\r\n        if(props.keyword===\"\"){\r\n            k=\"all\";\r\n        }\r\n        props.service.getAllCards(k)\r\n        .then((list) => {\r\n            setCards(list);\r\n        });\r\n        \r\n    }, [change,change1,change2])\r\n   \r\n    \r\n    \r\n      const arr = cards.map((card) => {\r\n        let str = card.addedDate+'';\r\n        let timestamp = new Date(str);\r\n        let todate=new Date(timestamp).getDate() <= 9 ? `0${new Date(timestamp).getDate()}` : new Date(timestamp).getDate();\r\n        let tomonth=new Date(timestamp).getMonth()+1 <= 9 ? `0${new Date(timestamp).getMonth()+1}` : new Date(timestamp).getMonth()+1;\r\n        let toyear=new Date(timestamp).getFullYear();\r\n        let original_date=todate+'.'+tomonth+'.'+toyear;\r\n              return (\r\n                <div class=\"col mb-4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{card.name}</h5>\r\n                        <Link to={`/card/${card.id}`}>DETAILS</Link>\r\n                        <p class=\"card-text\">{original_date}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              )\r\n          });\r\n      \r\n        if(props.keyword!==\"\"){\r\n            searchResultsFor = <h4 className=\"centered\">Search results for: {props.keyword}</h4>\r\n        }\r\n        let content = <div className=\"d-flex justify-content-center\">\r\n            <img className=\"not-found-img\" src=\"https://www.climax4business.com/images/no_result_found.png\"  />\r\n        </div>\r\n\r\n        if(arr.length>0){\r\n            content = \r\n            <div class=\"row row-cols-1 row-cols-md-3 mt-5\">\r\n                {arr}\r\n            </div>\r\n        }\r\n    return (\r\n        <div className=\"container\">\r\n            {searchResultsFor}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardDetails\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\cardDetails\\cardDetails.js",["134","135"],"import React, {useState, useEffect} from 'react';\r\nimport './cardDetails.css';\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport CardService from './../../service/service';\r\n\r\nconst CardDetails = (props) => {\r\n\r\n    \r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const [card, setCard] = useState({});\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    let history = useHistory();\r\n\r\n    let {cardId} = useParams();\r\n\r\n    const [newTask, setNewTask] = useState(null);\r\n\r\n    const [v, onValueChange] = useState(null)\r\n\r\n    useEffect(() => {\r\n        \r\n        props.service.getCard(cardId)\r\n            .then((data) => {\r\n                setCard(data);\r\n                onValueChange(data.name);\r\n            });\r\n\r\n            props.service.getTasks(cardId)\r\n        .then((data) => {\r\n            setTasks(data);\r\n        });\r\n        \r\n    },[newTask])\r\n\r\n    const convertNormalDate = (date) => {\r\n        let str = date+'';\r\n        let timestamp = new Date(str);\r\n        let todate=new Date(timestamp).getDate() <= 9 ? `0${new Date(timestamp).getDate()}` : new Date(timestamp).getDate();\r\n        let tomonth=new Date(timestamp).getMonth()+1 <= 9 ? `0${new Date(timestamp).getMonth()+1}` : new Date(timestamp).getMonth()+1;\r\n        let toyear=new Date(timestamp).getFullYear();\r\n        let tohour = new Date(timestamp).getHours() <= 9 ? `0${new Date(timestamp).getHours()}` : new Date(timestamp).getHours();;\r\n        let tominutes = new Date(timestamp).getMinutes() <= 9 ? `0${new Date(timestamp).getMinutes()}` : new Date(timestamp).getMinutes();\r\n        \r\n        return todate+'.'+tomonth+'.'+toyear+' '+tohour+':'+tominutes;\r\n    }\r\n\r\n    \r\n\r\n    let content = tasks.map((task) => {\r\n        \r\n        return(\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body\">\r\n                   <p>{task.taskText}</p>\r\n                   <label class=\"switch\">\r\n                        <input type=\"checkbox\" checked={task.done} \r\n                        onClick={ () => {props.service.addData({id: task.id, done:!task.done},\"addtask/\"+cardId)\r\n                        .then((data) => {setNewTask(data)})}} />\r\n                        <span class=\"slider round\"></span>\r\n                    </label>\r\n                   <p>{convertNormalDate(task.addedDate)}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    if(tasks.length === 0){\r\n        content = \"There are no tasks\";\r\n    }\r\n    \r\n    \r\n    \r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if(text!==\"\"){\r\n            const data = {taskText: text, done:false};\r\n            let url = \"addtask/\"+cardId;\r\n            props.service.addData(data, url)\r\n                .then((data) => {\r\n                    setNewTask(data);\r\n                });\r\n            setText(\"\");\r\n            props.service.getTasks(cardId)\r\n                .then((data) => {\r\n                    setTasks(data);\r\n                });\r\n        }\r\n        else{\r\n            alert(\"You didn't enter any text\");\r\n        }\r\n    }\r\n\r\n    const deleteCard = (e) => {\r\n        let url = \"deletecard/\"+cardId;\r\n        props.service.deleteCard(url)\r\n            .then((data) => {\r\n                props.deleteCard(data.id);\r\n            });\r\n        history.push(\"/\");\r\n    }\r\n   \r\n    const updateCard = () => {\r\n        props.service.addData({id: card.id, name: v, addedDate: card.addedDate},'addcard')\r\n            .then((data) => {\r\n                setCard({id: card.id, name: v, addedDate: card.addedDate});\r\n                setH2(true);\r\n            })\r\n    }\r\n\r\n    \r\n    \r\n\r\n    const [h2, setH2] = useState(true);\r\n    \r\n\r\n    let field = <h2>{card.name}</h2>;\r\n    \r\n    \r\n    let editButton = <button className=\"btn btn-outline\" onClick={() => {setH2(false)}}>EDIT</button>;\r\n    if(!h2){\r\n        field = <input className=\"form-control\" type=\"text\" value={v} onChange={(e) => {onValueChange(e.target.value)}} />\r\n        editButton = <button className=\"btn btn-outline\" onClick={updateCard}>SAVE</button>\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                {field}\r\n\r\n                   <p>{convertNormalDate(card.addedDate)}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"d-flex\">\r\n                    {editButton}\r\n                    <button className=\"btn btn-outline\" onClick={deleteCard}>DELETE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card add-task mt-3 mb-3\">\r\n            <div className=\"card-body\">\r\n                <form onSubmit={addTask}>\r\n                    <input type=\"text\" className=\"create-task-input\" placeholder=\"Create new task\" \r\n                    onChange={(e) => setText(e.target.value)}\r\n                    value = {text}\r\n                    />\r\n                    <hr/>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"create-button\">ADD NEW TASK</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        {content}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardDetails;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\search\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\search\\search.js",["136","137","138","139"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport './search.css';\r\nimport CardService from './../../service/service';\r\n\r\nconst Search = (props) => {\r\n\r\n\r\n   \r\n    return (\r\n        <div className=\"container mb-5\">\r\n            <input className=\"search-card-input\" type=\"text\" value={props.keyword} onChange={(e) => props.setKeyword(e.target.value)}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Search; ","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\homePage\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\homePage\\homePage.js",["140"],"import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './homePage.css';\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"banner\">\r\n                <img className=\"banner-image\" src={process.env.PUBLIC_URL + '/tms.png'} alt=\"tms\" />\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <ul class=\"list-group\">\r\n                    <li class=\"list-group-item\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"icon icon1\"><FontAwesomeIcon icon=\"clock\" size=\"2x\" /></div>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <div>\r\n                                <h6>Quick Access</h6>\r\n                                <p>Fast and easy</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"icon icon2\"><FontAwesomeIcon icon=\"folder\" size=\"2x\" /></div>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <div>\r\n                                <h6>Great Management</h6>\r\n                                <p>Grouping your tasks</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"icon icon3\"><FontAwesomeIcon icon=\"chart-bar\" size=\"2x\" /></div>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <div>\r\n                                <h6>Statistics</h6>\r\n                                <p>Monitoring with your success</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"icon icon4\"><FontAwesomeIcon icon=\"cloud-upload-alt\" size=\"2x\" /></div>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <div>\r\n                                <h6>Cloud Service</h6>\r\n                                <p>Store your data in cloud</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\FontAwesomeIcons\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\register\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\register\\register.js",["141"],"import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './register.css';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport CardService from './../../service/service';\r\n\r\nconst Register = (props) => {\r\n\r\n\r\n    const [sweet, setSweet] = useState(false);\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [rePassword, setRePassword] = useState(\"\");\r\n\r\n    const [registrationMessage, setRegistrationMessage] = useState(null);\r\n    \r\n    let history = useHistory();\r\n    \r\n\r\n    const onFullNameChange = event => {\r\n        setFullName(event.target.value);\r\n    }\r\n\r\n    const onEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onRePasswordChange = event => {\r\n        setRePassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = event =>{\r\n        const inputData = {email, password, rePassword, fullName};\r\n        props.service.registerUser(inputData)\r\n                .then((data) => {\r\n                    setRegistrationMessage(data.message);\r\n                    if(data.success===true){\r\n                        setSweet(true);\r\n                    }                    \r\n                })\r\n        event.preventDefault();\r\n    }\r\n\r\n    let errorMessage = null;\r\n        if(registrationMessage!==null){\r\n            errorMessage =  <div class=\"alert alert-danger\" role=\"alert\">\r\n                                {registrationMessage}\r\n                            </div>\r\n            \r\n        }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container mt-5 register-container\">\r\n                        <SweetAlert\r\n                                show={sweet}\r\n                                title=\"Demo\"\r\n                                text={registrationMessage}\r\n                                icon=\"success\"\r\n                                onConfirm={() => {\r\n                                    setSweet(false);\r\n                                    history.push(\"/login\");\r\n                                }}\r\n\r\n                            />\r\n            <h3>Create new account</h3>\r\n            <div className=\"mt-5\">\r\n            \r\n                <form onSubmit={handleSubmit}>\r\n                    {errorMessage}\r\n                    <div className=\"d-flex mb-5\">\r\n                        <FontAwesomeIcon icon=\"user-circle\" size=\"2x\" color=\"#245c8c\" />\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <input className=\"register-card-input\" type=\"text\" placeholder=\"Full Name\" value={fullName} onChange={onFullNameChange} />\r\n                    </div>\r\n                    <div className=\"d-flex mb-5\">\r\n                        <FontAwesomeIcon icon=\"envelope\" size=\"2x\" color=\"#245c8c\" />\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <input className=\"register-card-input\" type=\"email\" placeholder=\"Email\" value={email} onChange={onEmailChange}/>\r\n                    </div>\r\n                    <div className=\"d-flex mb-5\">\r\n                        <FontAwesomeIcon icon=\"lock\" size=\"2x\" color=\"#245c8c\" />\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <input className=\"register-card-input\" type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChange} />\r\n                    </div>\r\n                    <div className=\"d-flex mb-5\">\r\n                        <FontAwesomeIcon icon=\"lock\" size=\"2x\" color=\"#245c8c\" />\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <input className=\"register-card-input\" type=\"password\" placeholder=\"Repeat Password\" value={rePassword} onChange={onRePasswordChange} />\r\n                    </div>\r\n                    <div className=\"d-flex mb-3\">\r\n                        <input type=\"checkbox\" className=\"reg-log-checkbox\"/>\r\n                        <label>I have read and accepted the terms and conditions</label>\r\n                    </div>\r\n\r\n                    <div className=\"float-right\">\r\n                        <button className=\"reg-log-button\">REGISTER &nbsp; <FontAwesomeIcon icon=\"paper-plane\" color=\"white\" /></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\footer\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\footer\\footer.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\login\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\login\\login.js",["142"],"import React, {useState, useCookies} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {useHistory} from \"react-router-dom\";\r\nconst Login = (props) => {\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    \r\n    let history = useHistory();\r\n    \r\n    const onEmailChange = event =>{\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = event =>{\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = event =>{\r\n        const inputData = {email, password};\r\n        auth(inputData);\r\n        event.preventDefault();\r\n    }\r\n\r\n    async function auth(data){\r\n        \r\n        const response = await fetch(\"http://localhost:8000/auth\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            redirect: \"follow\",\r\n            referrerPolicy: \"no-referrer\",\r\n            body: JSON.stringify(data)\r\n          });\r\n\r\n        if(response.status===200){\r\n            let jwt = await response.json();\r\n            props.setCookieJWT('jwt', jwt.jwtToken);\r\n            history.push(\"/\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n    <div className=\"container mt-5 register-container\">\r\n        <h3>Sign In</h3>\r\n        <div className=\"mt-5\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"d-flex mb-5\">\r\n                    <FontAwesomeIcon icon=\"envelope\" size=\"2x\" color=\"#245c8c\" />\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <input className=\"register-card-input\" type=\"email\" placeholder=\"Email\" value={email} onChange={onEmailChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-5\">\r\n                    <FontAwesomeIcon icon=\"lock\" size=\"2x\" color=\"#245c8c\" />\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <input className=\"register-card-input\" type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChange}/>\r\n                </div>\r\n                <div className=\"d-flex mb-3\">\r\n                        <input type=\"checkbox\" className=\"reg-log-checkbox\"/>\r\n                        <label>Remember Me</label>\r\n                    </div>\r\n\r\n                    <div className=\"float-right\">\r\n                        <button className=\"reg-log-button\">LOGIN &nbsp; <FontAwesomeIcon icon=\"paper-plane\" color=\"white\" /></button>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userContext.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userProfile\\index.js",[],"C:\\Users\\mukht\\Desktop\\js-main\\react-spring\\src\\App4\\components\\userProfile\\userProfile.js",["143","144","145","146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":7,"column":5,"nodeType":"154","messageId":"155","endLine":7,"endColumn":9},{"ruleId":"152","severity":1,"message":"157","line":8,"column":5,"nodeType":"154","messageId":"155","endLine":8,"endColumn":18},{"ruleId":"152","severity":1,"message":"158","line":41,"column":12,"nodeType":"154","messageId":"155","endLine":41,"endColumn":28},{"ruleId":"152","severity":1,"message":"159","line":41,"column":30,"nodeType":"154","messageId":"155","endLine":41,"endColumn":49},{"ruleId":"152","severity":1,"message":"160","line":42,"column":12,"nodeType":"154","messageId":"155","endLine":42,"endColumn":31},{"ruleId":"152","severity":1,"message":"161","line":42,"column":33,"nodeType":"154","messageId":"155","endLine":42,"endColumn":55},{"ruleId":"162","severity":1,"message":"163","line":59,"column":7,"nodeType":"164","endLine":59,"endColumn":43,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"166","line":59,"column":26,"nodeType":"167","endLine":59,"endColumn":42},{"ruleId":"152","severity":1,"message":"153","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"168","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"169","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"170","line":3,"column":22,"nodeType":"154","messageId":"155","endLine":3,"endColumn":28},{"ruleId":"152","severity":1,"message":"171","line":4,"column":5,"nodeType":"154","messageId":"155","endLine":4,"endColumn":11},{"ruleId":"152","severity":1,"message":"172","line":5,"column":5,"nodeType":"154","messageId":"155","endLine":5,"endColumn":10},{"ruleId":"152","severity":1,"message":"173","line":10,"column":21,"nodeType":"154","messageId":"155","endLine":10,"endColumn":29},{"ruleId":"152","severity":1,"message":"174","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":19},{"ruleId":"152","severity":1,"message":"175","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":43},{"ruleId":"152","severity":1,"message":"174","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":19},{"ruleId":"162","severity":1,"message":"176","line":28,"column":8,"nodeType":"164","endLine":28,"endColumn":32,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":56,"column":13,"nodeType":"180","endLine":56,"endColumn":112},{"ruleId":"152","severity":1,"message":"174","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"162","severity":1,"message":"181","line":37,"column":7,"nodeType":"164","endLine":37,"endColumn":16,"suggestions":"182"},{"ruleId":"152","severity":1,"message":"168","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"169","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"175","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":43},{"ruleId":"152","severity":1,"message":"174","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":19},{"ruleId":"152","severity":1,"message":"168","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"174","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":19},{"ruleId":"152","severity":1,"message":"183","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"184","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"152","severity":1,"message":"185","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":18},{"ruleId":"152","severity":1,"message":"174","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":19},{"ruleId":"152","severity":1,"message":"186","line":23,"column":12,"nodeType":"154","messageId":"155","endLine":23,"endColumn":17},{"ruleId":"152","severity":1,"message":"187","line":30,"column":12,"nodeType":"154","messageId":"155","endLine":30,"endColumn":19},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'currentUserEmail' is assigned a value but never used.","'setCurrentUserEmail' is assigned a value but never used.","'currentUserFullName' is assigned a value but never used.","'setCurrentUserFullName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookieJWT' and 'service'. Either include them or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'CardService' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props.keyword' and 'props.service'. Either include them or remove the dependency array.",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cardId' and 'props.service'. Either include them or remove the dependency array.",["192"],"'useCookies' is defined but never used.","'useHistory' is defined but never used.","'SweetAlert' is defined but never used.","'sweet' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [cookieJWT, currentUser.email, service]",{"range":"199","text":"200"},"Update the dependencies array to be: [change, change1, change2, props.keyword, props.service]",{"range":"201","text":"202"},"Update the dependencies array to be: [cardId, newTask, props.service]",{"range":"203","text":"204"},[1792,1828],"[cookieJWT, currentUser.email, service]",[694,718],"[change, change1, change2, props.keyword, props.service]",[870,879],"[cardId, newTask, props.service]"]